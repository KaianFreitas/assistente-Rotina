package com.assistente_Rotina.assistente_Rotina.service;

import org.springframework.stereotype.Service;
import org.springframework.web.client.RestTemplate;
import org.springframework.web.util.UriComponentsBuilder;
import com.fasterxml.jackson.databind.JsonNode;
import com.fasterxml.jackson.databind.ObjectMapper;

import java.io.IOException;

//Servi√ßo para obter a previs√£o do tempo usando a API OpenWeatherMap.
@Service
public class WeatherService {

    private static final String API_KEY = "c930961a207400f541f0cdae9c19eacb";
    private static final String BASE_URL = "https://api.openweathermap.org/data/2.5/weather";

     // Obt√©m a previs√£o do tempo para uma cidade espec√≠fica.
     //@param cidade Nome da cidade
     //@return Descri√ß√£o do clima e temperatura

    public String getPrevisaoDoTempo(String cidade) {
        RestTemplate restTemplate = new RestTemplate();

        // Monta a URL da requisi√ß√£o
        String url = UriComponentsBuilder.fromHttpUrl(BASE_URL)
                .queryParam("q", cidade)
                .queryParam("appid", API_KEY)
                .queryParam("units", "metric") // Temperatura em Celsius
                .queryParam("lang", "pt") // Respostas em portugu√™s
                .toUriString();

        try {
            // Faz a requisi√ß√£o HTTP e obt√©m a resposta como String
            String response = restTemplate.getForObject(url, String.class);

            // Converte a resposta JSON em um objeto manipul√°vel
            ObjectMapper mapper = new ObjectMapper();
            JsonNode root = mapper.readTree(response);

            // Extrai informa√ß√µes do JSON
            String descricao = root.path("weather").get(0).path("description").asText();
            double temperatura = root.path("main").path("temp").asDouble();

            return String.format("üå§Ô∏è O tempo em %s est√° %s com temperatura de %.1f¬∞C.", cidade, descricao, temperatura);

        } catch (IOException e) {
            return "‚ùå Erro ao buscar previs√£o do tempo.";
        }
    }
}